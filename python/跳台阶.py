# -*- coding:utf-8 -*-
'''
一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。

实质上就是斐波那契数列：
 * 当n=1时，ways=1
 * 当n=2时，有[2] [1,1]两种情况，ways=2
 * 当n=3时，有[1,1,1] [1,2] [2,1]三种情况，ways=3
 * 当n=4时，有[1,1,1,1] [2,2] [1,1,2] [1,2,1] [2,1,1]五种情况，ways=5
 * 当n=5时，有[1,1,1,1,1] [2,2,1] [2,1,2] [1,2,2] [1,1,1,2] [1,1,2,1] [1,2,1,1] [2,1,1,1]八种情况，ways=8
 * 当n>3时，n对应的情况数字为n-1和n-2之和。此时，规律正好和斐波那契数列出现的规律对应。
 * 斐波拉切数列是这样一个数列：1、1、2、3、5、8、13、21、……在数学上，其被以递归的方法定义：F0=0，F1=1，Fn=F(n-1)+F(n-2)（n>=2）
'''


class Solution:
    def jumpFloor(self, number):
        # write code here
        res = [0]*(number+1)
        res[0]=1
        if number>=1:
			res[1]=1
        if number>=2:
            res[2]=2
        if number>=3:
            for i in range(3,number+1):
                res[i] = res[i-1]+res[i-2]
        return res[number]
